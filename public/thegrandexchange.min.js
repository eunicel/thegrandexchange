/*! thegrandexchange 02-12-2014 */
angular.module("thegrandexchange",["ui.router","ngCookies","ngTable"],function($httpProvider){$httpProvider.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded;charset=utf-8",$httpProvider.defaults.headers.put["Content-Type"]="application/x-www-form-urlencoded;charset=utf-8";var param=function(obj){var name,value,fullSubName,subName,subValue,innerObj,i,query="";for(name in obj)if(value=obj[name],value instanceof Array)for(i=0;i<value.length;++i)subValue=value[i],fullSubName=name+"["+i+"]",innerObj={},innerObj[fullSubName]=subValue,query+=param(innerObj)+"&";else if(value instanceof Object)for(subName in value)subValue=value[subName],fullSubName=name+"["+subName+"]",innerObj={},innerObj[fullSubName]=subValue,query+=param(innerObj)+"&";else void 0!==value&&null!==value&&(query+=encodeURIComponent(name)+"="+encodeURIComponent(value)+"&");return query.length?query.substr(0,query.length-1):query};$httpProvider.defaults.transformRequest=[function(data){return angular.isObject(data)&&"[object File]"!==String(data)?param(data):data}]}).config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("login",{url:"/login",templateUrl:"/views/login.html",controller:"LoginCtrl"}).state("newUser",{url:"/newUser",templateUrl:"/views/newUser.html",controller:"NewUsersCtrl"}).state("marketplace",{url:"/marketplace",templateUrl:"/views/marketplace.html",controller:"MainCtrl"}).state("offers",{url:"/offers",templateUrl:"/views/offers.html",controller:"OffersCtrl"}).state("completed",{url:"/completed",templateUrl:"/views/completed.html",controller:"CompletedCtrl"}).state("profile",{url:"/profile",templateUrl:"/views/profile.html",controller:"ProfileCtrl"}).state("item",{url:"/items/{id}",templateUrl:"/views/item.html",controller:"ItemCtrl"}),$urlRouterProvider.otherwise("login")}]),$(document).ready(function(){$(".sidebar-item").on("click",function(e){var previous=$(this).parent().children(".active");previous.removeClass("active"),"logout-tab"===e.target.id?$("#market-tab").addClass("active"):$(this).addClass("active")})}),angular.module("thegrandexchange").factory("items",["$http",function($http){return{getAll:function(){return $http.get("/api/items")},create:function(newItem){return $http.post("/api/items",newItem)},get:function(itemID){return $http.get("/api/items/"+itemID)},getOffers:function(itemID){return $http.get("/api/items/"+itemID+"/offers")},postOffer:function(itemID,offer){return $http.post("/api/items/"+itemID+"/offers",offer)},deleteOffer:function(itemID,offerID){return $http.delete("/api/items/"+itemID+"/offers/"+offerID)},flag:function(userID,itemID){return $http.post("/api/items/"+itemID+"/flags")}}}]),angular.module("thegrandexchange").factory("session",["$cookieStore",function($cookieStore){return{name:function(){return $cookieStore.get("username")},setName:function(username){$cookieStore.put("username",username)},clear:function(){$cookieStore.remove("username")}}}]),angular.module("thegrandexchange").factory("users",["$http",function($http){return{create:function(userData){return $http.post("/api/users",userData)},get:function(userID){return $http.get("/api/users/"+userID)},getOffers:function(userID){return $http.get("/api/users/"+userID+"/offers")},getReviews:function(userID){return $http.get("/api/users/"+userID+"/reviews")},getTransactions:function(userID){return $http.get("/api/users/"+userID+"/transactions")},postReview:function(userID,transactionID,review){return $http.post("/api/users/"+userID+"/transactions/"+transactionID,review)}}}]),angular.module("thegrandexchange").controller("CompletedCtrl",["$scope","users","session",function($scope,users,session){users.getTransactions(session.name()._id).success(function(data){for(var transactions=data.transactions,displayed_transactions=[],i=0;i<transactions.length;i++)transactions[i].buyOffer.postedBy._id!==session.name()._id||transactions[i].buyerRated?transactions[i].sellOffer.postedBy._id!==session.name()._id||transactions[i].sellerRated||(transactions[i].isBuyer=!1,displayed_transactions.push(transactions[i])):(transactions[i].isBuyer=!0,displayed_transactions.push(transactions[i]));$scope.transactions=displayed_transactions}),$scope.review=function(transaction){var newReview=(transaction.score,{text:transaction.review_content,score:transaction.score});console.log(newReview),users.postReview(session.name()._id,transaction._id,newReview).success(function(data){if(data.success)for(var i=0;i<$scope.transactions.length;i++)if($scope.transactions[i]._id===transaction._id)return void $scope.transactions.splice(i,1)})}}]),angular.module("thegrandexchange").controller("ItemCtrl",["$http","$scope","$location","$stateParams","session","items","users",function($http,$scope,$location,$stateParams,session,items,users){$scope.order="price",users.get(session.name()._id).success(function(data){$scope.userReputation=data.user.reputation,items.get($stateParams.id).success(function(data2){$scope.item=data2.item})}),$scope.offer=function(type){var newOffer={postedBy:session.name()._id,item:$scope.item._id,postedAt:Date.now(),price:parseInt($scope.price,10),type:type,minReputation:$scope.reputation};items.postOffer($scope.item._id,newOffer).success(function(data){if($scope.message=void 0,"No match"===data.message)newOffer.postedBy={firstName:session.name().firstName,lastName:session.name().lastName,reputation:$scope.userReputation},$scope.item.offers.push(newOffer),$scope.price="",$scope.reputation="";else if(data.success===!1)$scope.message=data.message;else for(var offers=$scope.item.offers,i=0;i<offers.length;i++)if(offers[i].price===data.transaction.price)return void offers.splice(i,1)})}}]),angular.module("thegrandexchange").controller("LoginCtrl",["$http","$scope","$location","session",function($http,$scope,$location,session){session.name()&&$http.post("/api/sessions",session.name()).success(function(data){data.success===!0?$location.path("marketplace"):session.clear()}),$scope.authenticate=function(){var userFields={username:$scope.email,password:$scope.password};$http.post("/api/sessions",userFields).success(function(data){data.success===!0?(userFields._id=data.userID,userFields.firstName=data.firstName,userFields.lastName=data.lastName,session.setName(userFields),$location.path("marketplace")):$scope.warning=response.data.message}).error(function(){$scope.warning="Invalid username and password."}),$scope.email="",$scope.password=""}}]),angular.module("thegrandexchange").controller("MainCtrl",["$scope","$location","session","items",function($scope,$location,session,items){$scope.isLoggedIn=function(){return void 0!==session.name()},$scope.flagged=function(item){return item.flags.indexOf(session.name()._id)>-1},$scope.userid=function(){return session.user()._id},$scope.logout=function(){session.clear(),$location.path("login")},$scope.flag=function(item){items.flag(session.name()._id,item._id).success(function(data){data.success&&item.flags.push(session.name()._id)}.bind(this))},$scope.toItem=function(item){$location.url("items/"+item._id)},$scope.addItem=function(){console.log("adding item");var item={name:$scope.name,description:$scope.description};items.create(item).success(function(data){data.item.bestSell="No offers",data.item.bestBuy="No offers",$scope.items.push(data.item),$scope.name="",$scope.description=""})},items.getAll().success(function(response){if($scope.items=response.items,response.success===!0)for(var i=0;i<$scope.items.length;i++){for(var item=$scope.items[i],offers=item.offers,buyPrices=[],sellPrices=[],j=0;j<offers.length;j++){var offer=offers[j],price=offer.price;"buy"===offer.type?buyPrices.push(price):"sell"===offer.type&&sellPrices.push(price)}item.bestBuy=buyPrices.length>0?"$"+Math.max.apply(null,buyPrices):"No offers",item.bestSell=sellPrices.length>0?"$"+Math.min.apply(null,sellPrices):"No offers"}else $scope.items=[{name:"no items found",description:"rekt"}]})}]),angular.module("thegrandexchange").controller("NewUsersCtrl",["$http","$scope","$location","users",function($http,$scope,$location,users){$scope.addUser=function(){if($scope.password!==$scope.passwordCheck)$scope.warning="Passwords do not match";else{var newUser={firstName:$scope.firstName,lastName:$scope.lastName,email:$scope.email,password:$scope.password};users.create(newUser).success(function(data){data.success===!0?$location.path("sessions"):$scope.warning=response.data.message}).error(function(error){$scope.warning=error.data.message})}$scope.password="",$scope.passwordCheck=""}}]),angular.module("thegrandexchange").controller("OffersCtrl",["$http","$scope","$filter","$timeout","users","session","items","ngTableParams",function($http,$scope,$filter,$timeout,users,session,items,ngTableParams){$scope.offers=[],$scope.deleteOffer=function(offer){items.deleteOffer("offer.item._id",offer._id).success(function(){for(var i=0;i<$scope.offers.length;i++)if($scope.offers[i]._id===offer._id)return $scope.offers.splice(i,1),void $scope.tableParams.reload()})},users.getOffers(session.name()._id).success(function(data){$scope.offers=data.offers,$scope.tableParams=new ngTableParams({page:1,count:10,sorting:{name:"asc"}},{total:0,getData:function($defer,params){var data=$scope.offers;params.total(data.length);var orderedData=params.sorting()?$filter("orderBy")(data,params.orderBy()):data;$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}}),$scope.tableParams.settings().$scope=$scope})}]),angular.module("thegrandexchange").controller("ProfileCtrl",["$http","$scope","$location","session","users",function($http,$scope,$location,session,users){users.get(session.name()._id).success(function(response){response.success===!0&&($scope.user=response.user)})}]);